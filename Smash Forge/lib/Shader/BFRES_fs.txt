#version 330

in vec2 f_texcoord0;
in vec2 f_texcoord1;
in vec4 color;
in float normal;

uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D spl;
uniform sampler2D nrm;
uniform vec4 colorSamplerUV;

void
main()
{

    vec3 norm = 2.0 * texture2D (nrm, f_texcoord0).rgb - 1.0;
    //norm = normalize (norm);
    float lamberFactor= dot (vec3(0.85, 0.85, 0.85), norm) * 1.5;

    vec4 ambiant = vec4(1,1,1,1.0) * texture(tex0, f_texcoord0).rgba;

    //float specular = -0.4 *(texture(spl, f_texcoord0).r - 1);
    //specular = normalize(specular);

    vec4 alpha = texture2D(tex0, f_texcoord0).aaaa;
    //if(alpha.a < 0.5) discard;   
	
    float red = texture2D(tex0, f_texcoord0).r;


	vec4 outputColor = ambiant + (vec4(texture(tex0, f_texcoord0).rgb, 1) * vec4(0.85,0.85,0.85,1.0) * normal);
    gl_FragData[0] =  vec4(((color * alpha * outputColor)).xyz, alpha.x * color.w);
    //gl_FragData[1] = vec4(texture2D(tex0, f_texcoord0))
}