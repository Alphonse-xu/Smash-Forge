#version 120
 
const int MY_ARRAY_SIZE = 200;

attribute vec3 vPosition;
attribute vec4 vColor;
attribute vec3 vNormal;
attribute vec2 vUV0;
attribute vec2 vUV1;
attribute vec4 vBone;
attribute vec4 vBone1;
attribute vec4 vWeight;
attribute vec4 vWeight1;
attribute vec3 vTangent;
attribute vec3 vBitangent;

varying vec2 f_texcoord0;
varying vec2 f_texcoord1;
varying vec2 f_texcoord2;
varying vec3 normal;
varying vec4 color;
varying vec3 tangent;
varying vec3 bitangent;

uniform vec4 gsys_bake_st0;
uniform vec4 gsys_bake_st1;
uniform mat4 modelview;
uniform mat4 bones[100];
uniform mat4 bonesfixed[100];
uniform int boneList[100];
uniform int RigidSkinning;
uniform mat4 modelLocation;
uniform int NoSkinning;
uniform mat4 TransformNoRig;

vec3 skinNRM(vec3 nr, ivec4 index)
{
    vec3 nrmPos = vec3(0);

    if(vWeight.x != 0.0) nrmPos = mat3(bones[boneList[index.x]]) * nr * vWeight.x;
    if(vWeight.y != 0.0) nrmPos += mat3(bones[boneList[index.y]]) * nr * vWeight.y;
    if(vWeight.z != 0.0) nrmPos += mat3(bones[boneList[index.z]]) * nr * vWeight.z;
    if(vWeight.w < 1) nrmPos += mat3(bones[boneList[index.w]]) * nr * vWeight.w;

    return nrmPos;
}

void main()
{
    ivec4 index = ivec4(vBone); 
    ivec4 index1 = ivec4(vBone1); 

    vec4 objPos = vec4(vPosition.xyz, 1.0);

    vec4 sampler2 = gsys_bake_st0;
    vec4 sampler3 = gsys_bake_st1;

    normal = normalize(mat3(modelview) * vNormal);

    if(vBone.x != -1){
        objPos = bones[boneList[index.x]] * vec4(vPosition, 1.0) * vWeight.x;
        objPos += bones[boneList[index.y]] * vec4(vPosition, 1.0) * vWeight.y;
        objPos += bones[boneList[index.z]] * vec4(vPosition, 1.0) * vWeight.z;
        if(vWeight.w < 1)
            objPos += bones[boneList[index.w]] * vec4(vPosition, 1.0) * vWeight.w;
    }
    if(vBone1.x != -1){
        objPos = bones[boneList[index1.x]] * vec4(vPosition, 1.0) * vWeight1.x;
        objPos += bones[boneList[index1.y]] * vec4(vPosition, 1.0) * vWeight1.y;
        objPos += bones[boneList[index1.z]] * vec4(vPosition, 1.0) * vWeight1.z;
        if(vWeight1.w < 1)
            objPos += bones[boneList[index1.w]] * vec4(vPosition, 1.0) * vWeight1.w;
    }

    gl_Position = modelview * vec4(objPos.xyz, 1.0);

    vec3 distance = (objPos.xyz + vec3(5, 5, 5))/2;

	if(vBone.x != -1.0)
		normal = normalize((skinNRM(vNormal.xyz, ivec4(vBone))).xyz);

    //gl_TexCoord[0] = vUV0;
    //gl_TexCoord[1] = vUV1;
    f_texcoord0 = vUV0;
    f_texcoord1 = vec2((vUV1 * sampler2.xy) + sampler2.zw);
    f_texcoord2 = vec2((vUV1 * sampler3.xy) + sampler3.zw);




	tangent = vTangent;
	bitangent = vBitangent;


    color = vColor;
}