#version 330
in vec3 normal;
in vec4 position;

uniform vec3 difLightDirection;
uniform vec3 difLightColor;
uniform vec3 ambLightColor;

uniform int renderType;
uniform int renderVertColor;
uniform mat4 modelview;

out vec4 FragColor;

void main()
{
    vec3 displayNormal = normal.xyz;
    displayNormal = (displayNormal + 1) / 2;

    vec4 diffuseColor = vec4((vec4),1);

    float halfLambert = dot(difLightDirection, normal.xyz);
    halfLambert = (halfLambert + 1) / 2;
    vec3 lighting = mix(ambLightColor, difLightColor, halfLambert); // gradient based lighting

    vec3 resultingColor = diffuseColor.rgb * lighting.rgb;
    FragColor = vec4(resultingColor, 1);

    if (renderType == 1) // normals color
        FragColor = vec4(displayNormal,1);
}
