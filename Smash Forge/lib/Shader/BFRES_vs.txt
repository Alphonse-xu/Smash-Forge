#version 330
 
in vec3 vPosition;
in vec4 vColor;
in vec3 vNormal;
in vec2 vUV0;
in vec2 vUV1;
in vec4 vBone;
in vec4 vWeight;

out vec2 f_texcoord0;
out vec2 f_texcoord1;
out vec3 normal;
out vec4 color;

uniform mat4 modelview;
uniform mat4 bones[100];
uniform int boneList[100];

void
main()
{
    ivec4 index = ivec4(vBone); 

    vec4 objPos = vec4(vPosition.xyz, 1.0);

    if(vBone.x != -1){
        objPos = bones[boneList[index.x]] * vec4(vPosition, 1.0) * vWeight.x;
        objPos += bones[boneList[index.y]] * vec4(vPosition, 1.0) * vWeight.y;
        objPos += bones[boneList[index.z]] * vec4(vPosition, 1.0) * vWeight.z;
        if(vWeight.w < 1)
            objPos += bones[boneList[index.w]] * vec4(vPosition, 1.0) * vWeight.w;
    } 

    gl_Position = modelview * vec4(objPos.xyz, 1.0);

    vec3 distance = (objPos.xyz + vec3(5, 5, 5))/2;


    //gl_TexCoord[0] = vUV0;
    //gl_TexCoord[1] = vUV1;
    f_texcoord0 = vUV0;
    f_texcoord1 = vUV1;

    normal = normalize(mat3(modelview) * vNormal);
    normal = vNormal;

	color = vec4(1);

  //  color = vColor;
}