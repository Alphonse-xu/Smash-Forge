<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD0
        BgAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDBUAAZ8B1wHuAXAB1QH/AXAB1QH/AXAB1QH/AXAB1AH+AXEB1QH/AW8B1QH/
        AXAB1QH/AXAB1AH+AXAB1AH/AW8B1AH/AXAB1QH/AXAB0wH/AW8B1QH/AXAB1QH/BgADSSEwA75mAAGw
        AeQB+QFzAdcB/gF0AdYB/gF0AdgB/wFzAdcB/gFzAdcB/wFzAdcB/gFzAdcB/gF0AdYB/gFzAdcB/gFz
        AdcB/gFzAdcB/gFzAdcB/gFyAdcB/gF0AdgB/wYAAzAhAAMwZgABmwHiAf4BeAHZAf8BeAHZAf8BdgHZ
        Af8BeAHZAf8BeAHZAf8BeAHZAf8BeAHZAf8BeAHZAf8BeAHZAf8BeAHZAf8BdwHZAf8BdgHZAf8BdgHZ
        Af8BeAHZAf8GAAMwIQADMGYAAY4B4AH/AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/
        AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/AXsB2wH/BgADMAMAA50VMAP/
        AwADMGYAAZAB4gH+AX4B3AH/AX4B3AH/AX4B3AH/AX4B3AH/AX4B3AH/AX4B3AH/AX4B3AH/AX4B3AH/
        AX4B3AH/AX8B3QH/AX4B3AH/AX4B3AH/AX4B3AH/AX4B3AH/BgADMAYAFVsGAAMwZgABkwHkAf4BggHf
        Af8BgQHhAf8BggHfAf4BggHfAf8BggHfAf4BggHfAf8BggHfAf8BggHfAf4BggHfAf4BggHfAf8BggHf
        Af8BggHfAf4BggHfAf4BggHfAf8GAAMwIQADMGYAAZcB5QH/AYYB4gH/AYYB4gH/AYUB4QH+AYUB4QH+
        AYUB4AH/AYYB4gH/AYYB4gH/AYYB4gH/AYYB4QH/AYUB4gH/AYYB4gH/AYYB4gH/AYYB4gH/AYUB4gH/
        BgADMAYAFTAGAAMwZgABmgHnAf8BiAHjAf4BiAHjAf4BiAHjAf4BiAHjAf4BiAHjAf4BiAHjAf4BiAHj
        Af4BiAHjAf4BiAHjAf4BiQHkAf8BiAHjAf4BiAHjAf4BiAHjAf4BiAHjAf4GAAMwBgAVMAYAAzBmAAGe
        AeoB/wGMAeYB/wGMAeYB/wGMAeYB/wGMAeYB/wGMAeYB/gGMAeYB/wGMAecB/wGMAeYB/wGNAecB/wGM
        AeYB/wGMAeYB/wGMAeYB/wGMAeYB/wGMAeYB/wYAAzAhAAMwZgABoAHrAf8BkAHoAf8BkAHoAf8BkAHo
        Af8BkAHoAf8BjwHpAf8BkAHoAf8BjwHoAf8BkAHoAf8BkAHoAf8BkAHoAf8BkAHoAf8BkAHoAf8BkAHo
        Af8BkAHoAf8GAAMwBgAMkg8AAzBjAAP/AaEB7QH/AZMB6QH/AZMB6QH/AZMB6QH/AZEB6gH+AZMB6QH/
        AZMB6QH/AZMB6QH/AZMB6QH/AZMB6QH/AZMB6QH/AZMB6QH/AZMB6QH/AZMB6QH/AZMB6QH/BgADMAMA
        A3IPMAwAAzBjAAHhAe0B8wGlAe8B/wGWAewB/wGWAewB/gGWAewB/wGWAewB/gGXAewB/gGOAd8B+wGN
        AeAB+gGOAeAB+gGNAeEB+QGOAeEB+QGOAeAB+gGNAeAB+gGOAeAB+gGPAeAB+gYAAzAYAAwwZgABpwHw
        Af8BlwHuAf4BlwHuAf4BlwHuAf4BmAHuAf4BnAHjAfoBlQHsAf4BlQHsAf8BlQHsAf8BlQHsAf8BlQHs
        Af8BlQHsAf8BlQHsAf8BlQHsAf8BlQHsAf8GAAMwFQADuQkwaQAB8gH1AfcBjgHgAfoBjgHgAfkBjgHg
        AfoBjgHfAfoBlwHtAf8B7QHzAfYB7QHzAfYB7QHzAfYB7QHzAfYB7QHzAfYB7QHzAfYB7QHzAfYB7QHz
        AfYB7QHzAfYGAAMwFQADgwYwbwABmwHwAf8BmwHwAf8BmgHvAf8BmwHwAf8BmgHvAf4hAB4wcgABXAHG
        AfIBXQHHAfMBXQHHAfMBXQHHAfMBXQHHAfInABVGbwABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/wEAAYABAAHAAQEEAAGAAQAB3wH9BAABgAEAAd8B/QQAAYABAAHQAQUEAAGAAQAB2AEN
        BAABgAEAAd8B/QQAAYABAAHYAQ0EAAGAAQAB2AENBAABgAEAAd8B/QQAAYABAAHYAX0GAAHQAT0GAAHf
        AeEEAAGAAQAB3wHDBAABgAEAAd8BxwQAAcEB/wHAAQ8EAAHBAf8B8AEfBAAL
</value>
  </data>
</root>