<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACu
        EQAAAk1TRnQBSQFMAgEBBAEAARABAAEQAQABFAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABIAMAAQEBAAEYBgABHv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ACQAAbsB3gHtAYMB1gH4
        AXAB1QH/AXAB1QH/AXAB1QH/AXAB1AH+AXEB1QH/AXAB1QH/AW8B1QH/AXAB1QH/AXAB1AH+AXAB1AH/
        AXAB1AH/AW8B1AH/AXAB1QH/AXAB0wH/AW8B1AH/AW8B1QH/AZ0B3QH4BgADtAM/JzADhQPcAwABzgG0
        Aa8BzgG0Aa8BzgG0Aa8BzQGzAa8BbQFwAcoBKwFBAd0BKwFBAd0BawFuAcsBugGmAbUBigGEAcIBjgGH
        AcEBvQGoAbQBzgG0Aa8BzgG0Aa8BzgG0Aa8BzgG0Aa8BzgG0Aa8BzgG0Aa8BzgG0Aa8BzgG0Aa8CYwG8
        AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8
        AmMBvAJjAbwCYwG8AmMBvAMAAcUB5wHzAYwB3AH8AXMB1wH+AXQB1gH+AXQB2AH/AXMB1wH+AXMB1wH/
        AXMB1wH/AXMB1wH+AXMB1wH+AXQB1gH+AXMB1wH+AXMB1wH+AXMB1wH+AXMB1wH+AXMB1wH+AXIB1wH+
        AXMB1wH+AZ8B3wH4BgADqwOqJwADqwOqAwABzgG0Aa8B3QHRAc4B6gHlAeQBewGAAdQBKwFBAd0BUgFh
        AdgC3AHoAS8BQwHdASsBQQHdATYBSQHeAT0BUQHeAY0BlAHcAesB5gHlAesB5gHlAesB5gHlAesB5gHl
        AesB5gHlAesB5gHlAdwBzQHLAc4BtAGvAmMBvAJ9AcQC0gHmAtIB5gLSAeYC0gHmAtIB5gLSAeYC0gHm
        AtIB5gLSAeYC0gHmAtIB5gLSAeYC0gHmAtIB5gLSAeYC0gHmAn0BxAJjAbwDAAG4AeYB9gGGAd0B/wF4
        AdkB/wF4AdkB/wF2AdkB/wF4AdkB/wF4AdkB/wF4AdkB/wF4AdkB/wF4AdkB/wF4AdkB/wF4AdkB/wF4
        AdkB/wF4AdkB/wF3AdkB/wF2AdkB/wF2AdkB/wF3AdkB/wGhAeAB+AYAA6sDqicAA6sDqgMAAc4BtAGv
        AekB5AHjA/4BNAFIAd0BKwFBAd0BKwFBAd0B9QH2AfkBSQFbAd8BKwFBAd0BuAG+AusB7AH1AcoBzwHt
        EgAB5gHfAd0BzgG0Aa8CYwG8ApMBzTAAApMBzQJjAbwDAAGvAeQB9wGDAd0B/wF7AdsB/wF7AdsB/wF7
        AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wF7
        AdsB/wF7AdsB/wF7AdsB/wF7AdsB/wGjAeAB+AYAA6sDqgP0A50DRhUwA1kD/wP4A6sDqgMAAc4BtAGv
        AekB5AHjAwAB7gHvAfYBUQFiAeABKwFBAd0BrgG1AekBfgGKAeMBgwGPAeQC8gH3Ab8BxAHrFQAB5gHf
        Ad0BzgG0Aa8CYwG8ApMBzTAAApMBzQJjAbwDAAGyAeYB9gGFAd4B/wF+AdwB/wF+AdwB/wF+AdwB/wF+
        AdwB/wF+AdwB/wF+AdwB/wF+AdwB/wF+AdwB/wF+AdwB/wF+AdwB/wF+AdwB/wF/Ad0B/wF+AdwB/wF+
        AdwB/wF+AdwB/wF+AdwB/wGlAeEB+AYAA6sDqgYAA5AVWwOPBgADqwOqAwABzgG0Aa8B6QHkAeMD/gHp
        AeoB9QGgAakB5wErAUEB3QErAUEB3QErAUEB3QE6AU4B3gFgAW8B4AP+FQAB5gHfAd0BzgG0Aa8CYwG8
        ApMBzQMAA8AD8gkAA5gGigPGBgADxQPwBgACkwHNAmMBvAMAAbMB5wH2AYkB4QH/AYIB4AH/AYEB4QH/
        AYIB3wH+AYIB3wH/AYIB3wH+AYIB3wH+AYIB3wH/AYIB3wH/AYIB3wH+AYIB3wH+AYIB3wH+AYIB3wH/
        AYIB3wH/AYIB3wH+AYIB3wH+AYIB3wH+AagB4wH4BgADqwOqJwADqwOqAwABygGyAbABnQGgAdcBSwFd
        Ad4BKwFBAd0BKwFBAd0BKwFBAd0BKwFBAd0BKwFBAd0BKwFBAd0BNgFJAd4B7gHvAfYVAAHmAd8B3QHO
        AbQBrwJjAbwCkwHNAwADeAPkCQAD5QNyA6wD8AYAA4MD4QYAApMBzQJjAbwDAAG1AecB9wGNAeMB/wGG
        AeIB/wGGAeIB/wGFAeEB/gGFAeEB/gGFAeAB/wGFAeEB/wGGAeIB/wGGAeIB/wGGAeIB/wGGAeEB/wGG
        AeEB/wGFAeIB/wGGAeIB/wGGAeIB/wGGAeIB/wGGAeIB/wGpAeUB+AYAA6sDqgYAA3QVMANzBgADqwOq
        AwABVAFeAdEBbAF6Ad4BvwHEAesB1gHZAfABvwHFAesBKwFBAd0BKwFBAd0BKwFBAd0BKwFBAd0BKwFB
        Ad0BLwFCAdwBlAGfAeYC+AH6DwAB5gHfAd0BzgG0Aa8CYwG8ApMBzQMAA3gD5AwAA5QD1wkAA4MD4QYA
        ApMBzQJjAbwDAAG4AekB9wGPAeUB/gGIAeMB/gGIAeMB/gGIAeMB/gGIAeMB/gGIAeMB/gGIAeMB/gGI
        AeMB/gGIAeMB/gGIAeMB/gGIAeMB/gGIAeMB/gGJAeQB/wGIAeMB/gGIAeMB/gGIAeMB/gGIAeMB/gGs
        AeYB9gYAA6sDqgYAA3QVMANzBgADqwOqAwABZAFqAc0BmgGeAdsBwQHGAewB2gHdAfABtQG8AeoBqgGx
        AekBrwG3AekBiwGXAeUBXwFvAeEBNAFIAd4BKwFBAd0BKwFBAd0BcAF/AeIPAAHmAd8B3QHOAbQBrwJj
        AbwCkwHNAwADeANAA1UDvwYAA5QD1wkAA4MD4QYAApMBzQJjAbwDAAG7AeoB9wGTAegB/wGMAeYB/wGM
        AeYB/wGMAeYB/wGMAeYB/wGMAeYB/gGMAeYB/gGMAeYB/wGMAecB/wGMAeYB/wGNAecB/wGNAecB/wGM
        AeYB/wGMAeYB/wGMAeYB/wGMAeYB/wGMAeYB/wGuAegB+AYAA6sDqicAA6sDqgMAAc4BtAGvAekB5AHj
        A/0B2gHdAfEBbAF7AeEB1QHYAe8B6QHrAfUC9wH6Bv4C9gH5AdgB2gHwAXsBiAHjDwAB5gHfAd0BzgG0
        Aa8CYwG8ApMBzQMAA3gD1AP2A/sGAAOUA9cJAAODA+EGAAKTAc0CYwG8AwABuwHqAfcBlgHpAf8BkAHo
        Af8BkAHoAf8BkAHoAf8BkAHoAf8BjwHpAf8BjwHpAf8BkAHoAf8BjwHoAf8BkAHoAf8BkAHoAf8BkAHo
        Af8BkAHoAf8BkAHoAf8BkAHoAf8BkAHoAf8BkAHoAf8BsAHpAfgGAAOrA6oGAAOyDJID8w8AA6sDqgMA
        Ac4BtAGvAekB5AHjBgAD/gH1AfYB+QHmAegB8wHSAdYB7wG9AcIB6wG5Ab8B6gG4Ab4B6wHBAcYB7AP8
        DwAB5gHfAd0BzgG0Aa8CYwG8ApMBzQMAA3gD5AwAA5QD1wkAA4MD4QYAApMBzQJjAbwD/wG0AfEB/wGZ
        AesB/wGTAekB/wGTAekB/wGTAekB/wGRAeoB/gGSAekB/wGTAekB/wGTAekB/wGTAekB/wGTAekB/wGT
        AekB/wGTAekB/wGTAekB/wGTAekB/wGTAekB/wGTAekB/wGTAekB/wGzAekB+AYAA6sDqgPyA3IDPQ8w
        A9MMAAOrA6oDAAHOAbQBrwHpAeQB4zAAAeYB3wHdAc4BtAGvAmMBvAKTAc0DAAOGAx4DIAOLAwADPAMc
        Ax4DlAPZAyADHAMeAygDAAKTAc0CYwG8AeEB7QHzAbEB7wH9AZwB7QH/AZYB7AH/AZYB7AH+AZYB7AH/
        AZYB7AH+AZcB7AH+AZMB5wH9AY4B3wH7AY0B4AH6AY4B4AH6AY0B4QH5AY0B4QH5AY4B4QH5AY4B4AH6
        AY0B4AH6AY4B4AH6AY4B4AH6AbAB4wH1BgADqwOqGwAD0wwwA6oDAAHOAbQBrwHpAeQB4zAAAeYB3wHd
        Ac4BtAGvAmMBvAKTAc0wAAKTAc0CYwG8AwABwAHtAfcBnQHvAf4BlwHuAf4BlwHuAf4BlwHuAf4BmAHu
        Af4BmgHnAfwBmQHnAfwBlQHsAf4BlQHsAf8BlQHsAf8BlQHsAf8BlQHsAf8BlQHsAf8BlQHsAf8BlQHs
        Af8BlQHsAf8BlQHsAf8BswHsAfgGAAOrA6oYAAPcA4IJMAPTBgABzgG0Aa8B3QHQAc4B6gHlAeQB6gHl
        AeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHl
        AeQB6gHlAeQB6gHlAeQB6gHlAeQB6gHlAeQB2wHNAckBzgG0Aa8CYwG8ApMBzTAAApMBzQJjAbwDAAHw
        AfEB8wG2AegB+QGOAeAB+gGOAeAB+QGOAeAB+gGOAd8B+gGTAecB/QG5Ae8B+wHtAfMB9gHtAfMB9gHt
        AfMB9gHtAfMB9gHtAfMB9gHtAfMB9gHtAfMB9gHtAfMB9gHtAfMB9gHtAfMB9gHtAfAB8gYAA6sDqhgA
        A8gDYgYwA+8JAAHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHO
        AbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHO
        AbQBrwHOAbQBrwJjAbwCkQHMMPsCkQHMAmMBvAYAAdEB7gH0AZsB8AH/AZsB8AH/AZoB7wH/AZsB8AH/
        AZoB7wH+AdAB7gH0JwADqyEwA3MPAAHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHO
        AbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHOAbQBrwHO
        AbQBrwHOAbQBrwHOAbQBrwHOAbQBrwJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJj
        AbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8BgABugHfAfABXAHGAfIBXQHH
        AfMBXQHHAfMBXQHHAfMBXQHHAfIBugHgAfAtAAPxGEYDsRIAAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGv
        Ac4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGv
        Ac4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAc4BtAGvAmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8
        AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwCYwG8AmMBvAJjAbwBQgFN
        AT4HAAE+AwABKAMAAVADAAEgAwABAQEAAQEFAAGAAQEWAAP/wQABgAEAAQwBAAEBBwABgAEAAQwB/wH5
        BwABgAEAAQwB/wH5AQABDwHDAf8B/AIAAYABAAEMAQABAQEgAR8BwwH/AfwCAAGAAQABDAHAARkBAAEf
        AcIBcAHMAgABgAEAAQwB/wH5AQABHwHCAXABzAIAAYABAAEMAcABGQEAAQcBwgF5AcwCAAGAAQABDAHA
        ARkBAAEHAcIBGQHMAgABgAEAAQwB/wH5AQABBwHCARkBzAIAAYABAAEMAcAB+QEwAQcBwgF5AcwEAAEM
        AQABeQE/Af8BwgEQAQQEAAEMAf8BgQE/Af8BwwH/AfwCAAGAAQABDAH/AQMCAAEDAf8B/AIAAYABAAEM
        Af8BBwcAAcABfwH8AQABHwcAAcABfwH/AQABPwcACw==
</value>
  </data>
</root>